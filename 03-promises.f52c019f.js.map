{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAASJ,SAASC,cAAc,sBAoBtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAIP,SAASO,EAAUC,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC7BV,EAAAmB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAG/D,SAASY,EAAQJ,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC3BV,EAAAmB,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OApC5DR,EAAKsB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAQN,IANA,IAAMC,EAAW,CACfjB,MAAOkB,OAAOvB,EAAWwB,OACzBC,KAAMF,OAAOtB,EAAUuB,OACvBE,OAAQH,OAAOrB,EAAOsB,QAGfG,EAAI,EAAGA,GAAKL,EAASI,OAAQC,GAAK,EACzCL,EAASjB,OAASiB,EAASG,KAC3BtB,EAAcwB,EAAGL,EAASjB,OAAOuB,KAAKhB,GAAWiB,MAAMZ,GACvDpB,EAAKiC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('input[name=delay]');\nconst delayStep = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const getValue = {\n    delay: Number(firstDelay.value),\n    step: Number(delayStep.value),\n    amount: Number(amount.value),\n  };\n\n  for (let i = 1; i <= getValue.amount; i += 1) {\n    getValue.delay += getValue.step;\n    createPromise(i, getValue.delay).then(onSuccess).catch(onError);\n    form.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$onSuccess","param","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","event","preventDefault","getValue","Number","value","step","amount","i","then","catch","reset"],"version":3,"file":"03-promises.f52c019f.js.map"}